@echo off
setlocal EnableDelayedExpansion

:: take - Create a new directory and change to it, or download and extract archives
doskey take=for /f "tokens=*" %%i in ('call %~dp0take.cmd $*') do cd /d %%i

:: Create the take.cmd script
echo @echo off > "%~dp0take.cmd"
echo setlocal EnableDelayedExpansion >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo :: Check if argument is provided >> "%~dp0take.cmd"
echo if "%%~1"=="" ( >> "%~dp0take.cmd"
echo     echo Usage: take ^<directory^|git-url^|archive-url^> >&2 >> "%~dp0take.cmd"
echo     exit /b 1 >> "%~dp0take.cmd"
echo ) >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo :: Handle URLs with query parameters >> "%~dp0take.cmd"
echo set "target=%%~1" >> "%~dp0take.cmd"
echo if "!target:?=!"=="!target!" goto :no_query >> "%~dp0take.cmd"
echo for /f "tokens=1 delims=?" %%%%a in ("!target!") do set "target=%%%%a" >> "%~dp0take.cmd"
echo :no_query >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo :: Check if it's a URL >> "%~dp0take.cmd"
echo echo !target! | findstr /r "^https\?://\|^ftp://\|^git@\|^ssh://\|^rsync://" >nul >> "%~dp0take.cmd"
echo if errorlevel 1 goto :local_dir >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo :: Create temporary directory >> "%~dp0take.cmd"
echo set "tmpdir=%%temp%%\take_%%random%%" >> "%~dp0take.cmd"
echo mkdir "!tmpdir!" >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo :: Handle different URL types >> "%~dp0take.cmd"
echo echo !target! | findstr /r "\.tar\.gz$\|\.tgz$\|\.tar\.bz2$\|\.tar\.xz$" >nul >> "%~dp0take.cmd"
echo if not errorlevel 1 ( >> "%~dp0take.cmd"
echo     :: Download and extract tarball >> "%~dp0take.cmd"
echo     set "archive=!tmpdir!\archive.tar" >> "%~dp0take.cmd"
echo     curl -L "!target!" -o "!archive!" >> "%~dp0take.cmd"
echo     if errorlevel 1 ( >> "%~dp0take.cmd"
echo         echo Failed to download archive >&2 >> "%~dp0take.cmd"
echo         rd /s /q "!tmpdir!" >> "%~dp0take.cmd"
echo         exit /b 1 >> "%~dp0take.cmd"
echo     ) >> "%~dp0take.cmd"
echo     for /f "tokens=1 delims=/" %%%%a in ('tar -tf "!archive!" ^| findstr /n "^" ^| findstr "^1:"') do set "dir=%%%%a" >> "%~dp0take.cmd"
echo     tar xf "!archive!" >> "%~dp0take.cmd"
echo     if errorlevel 1 ( >> "%~dp0take.cmd"
echo         echo Failed to extract archive >&2 >> "%~dp0take.cmd"
echo         rd /s /q "!tmpdir!" >> "%~dp0take.cmd"
echo         exit /b 1 >> "%~dp0take.cmd"
echo     ) >> "%~dp0take.cmd"
echo     rd /s /q "!tmpdir!" >> "%~dp0take.cmd"
echo     echo !dir! >> "%~dp0take.cmd"
echo     exit /b 0 >> "%~dp0take.cmd"
echo ) >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo echo !target! | findstr /r "\.zip$" >nul >> "%~dp0take.cmd"
echo if not errorlevel 1 ( >> "%~dp0take.cmd"
echo     :: Download and extract ZIP >> "%~dp0take.cmd"
echo     set "archive=!tmpdir!\archive.zip" >> "%~dp0take.cmd"
echo     curl -L "!target!" -o "!archive!" >> "%~dp0take.cmd"
echo     if errorlevel 1 ( >> "%~dp0take.cmd"
echo         echo Failed to download archive >&2 >> "%~dp0take.cmd"
echo         rd /s /q "!tmpdir!" >> "%~dp0take.cmd"
echo         exit /b 1 >> "%~dp0take.cmd"
echo     ) >> "%~dp0take.cmd"
echo     for /f "tokens=4" %%%%a in ('powershell -command "& { Add-Type -AssemblyName System.IO.Compression.FileSystem; $zip = [System.IO.Compression.ZipFile]::OpenRead('!archive!'); $zip.Entries[0].FullName }"') do set "dir=%%%%a" >> "%~dp0take.cmd"
echo     powershell -command "& { Add-Type -AssemblyName System.IO.Compression.FileSystem; [System.IO.Compression.ZipFile]::ExtractToDirectory('!archive!', '.') }" >> "%~dp0take.cmd"
echo     if errorlevel 1 ( >> "%~dp0take.cmd"
echo         echo Failed to extract archive >&2 >> "%~dp0take.cmd"
echo         rd /s /q "!tmpdir!" >> "%~dp0take.cmd"
echo         exit /b 1 >> "%~dp0take.cmd"
echo     ) >> "%~dp0take.cmd"
echo     rd /s /q "!tmpdir!" >> "%~dp0take.cmd"
echo     echo !dir! >> "%~dp0take.cmd"
echo     exit /b 0 >> "%~dp0take.cmd"
echo ) >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo echo !target! | findstr /r "\.git$\|^git@" >nul >> "%~dp0take.cmd"
echo if not errorlevel 1 ( >> "%~dp0take.cmd"
echo     :: Clone git repository >> "%~dp0take.cmd"
echo     for /f "tokens=1* delims=/" %%%%a in ("!target!") do set "repo=%%%%b" >> "%~dp0take.cmd"
echo     set "repo=!repo:.git=!" >> "%~dp0take.cmd"
echo     git clone "!target!" "!repo!" >> "%~dp0take.cmd"
echo     if errorlevel 1 ( >> "%~dp0take.cmd"
echo         echo Failed to clone repository >&2 >> "%~dp0take.cmd"
echo         exit /b 1 >> "%~dp0take.cmd"
echo     ) >> "%~dp0take.cmd"
echo     echo !repo! >> "%~dp0take.cmd"
echo     exit /b 0 >> "%~dp0take.cmd"
echo ) >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo echo Unsupported URL format >&2 >> "%~dp0take.cmd"
echo exit /b 1 >> "%~dp0take.cmd"
echo. >> "%~dp0take.cmd"
echo :local_dir >> "%~dp0take.cmd"
echo :: Create and change to directory >> "%~dp0take.cmd"
echo mkdir "%%~1" 2>nul >> "%~dp0take.cmd"
echo echo %%~f1 >> "%~dp0take.cmd"
echo exit /b 0 >> "%~dp0take.cmd"

echo Take command installed. Please restart your command prompt.